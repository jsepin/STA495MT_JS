"n" = seq(10,80, length.out = 100),
"Delta" = c(3),"sigma"=c(3),
"voilen"=c(0.5,0.7,0.9)
)
pow_unba <- apply(par_unba, 1, function(x) Collinearity::copowerlm(power = NULL,
alpha=0.05, n=x[2],
Delta=x[3], sigma=x[4],
trouble = x[1],
p = 3, voilen =  x[5]
)$power )
pow_unba <- data.frame(par_unba, "Power"=pow_unba)
library(metR);library(ggplot2)
ggplot(data = pow_unba, aes(x=Trouble, y=n, z = Power,linetype=as.factor(voilen),
col=as.factor(voilen))) +
geom_contour(binwidth = 0.2) +
geom_text_contour(stroke = 0.15,binwidth = 0.2,label.placer = label_placer_random(),skip = 0)+theme_classic()+
theme(legend.position = "bottom")+
labs(title = expression("Power calculation (adjusted function) for different"~bold(pi)~"["~j~"]"), y = "Total sample size",
x=expression("Diagonal entry of inverse matrix: "~((bold(E^T~E))^{-1})~"[j,j]=trouble")) +
#guides(linetype="none")+
scale_colour_viridis_d(expression(pi[j]~":"))
?guides
ggplot(data = pow_unba, aes(x=Trouble, y=n, z = Power,linetype=as.factor(voilen),
col=as.factor(voilen))) +
geom_contour(binwidth = 0.2) +
geom_text_contour(stroke = 0.15,binwidth = 0.2,label.placer = label_placer_random(),skip = 0)+theme_classic()+
theme(legend.position = "bottom")+
labs(title = expression("Power calculation (adjusted function) for different"~bold(pi)~"["~j~"]"), y = "Total sample size",
x=expression("Diagonal entry of inverse matrix: "~((bold(E^T~E))^{-1})~"[j,j]=trouble")) +
guides(linetype="none",text = "none")+
scale_colour_viridis_d(expression(pi[j]~":"))
ggplot(data = pow_unba, aes(x=Trouble, y=n, z = Power,linetype=as.factor(voilen),
col=as.factor(voilen))) +
geom_contour(binwidth = 0.2) +
geom_text_contour(stroke = 0.15,binwidth = 0.2,label.placer = label_placer_random(),skip = 0, show.legend = F)+
theme_classic()+
theme(legend.position = "bottom")+
labs(title = expression("Power calculation (adjusted function) for different"~bold(pi)~"["~j~"]"), y = "Total sample size",
x=expression("Diagonal entry of inverse matrix: "~((bold(E^T~E))^{-1})~"[j,j]=trouble")) +
guides(linetype="none",text = "none")+
scale_colour_viridis_d(expression(pi[j]~":"))
# Small simulation to compare methods
library(tidyverse)
est_rmv <- readRDS("../data/est_rmv.rds")
est_rmv$method <- "rmv"
est_scalefac <- readRDS("../data/est_scalefac.rds")
est_scalefac$method <- "scale"
est_rmv_normal <- readRDS("../data/est_rmv_normal.rds")
est_rmv_normal$method <- "rmvnormal"
# combine plots
df_comp <- rbind(est_rmv, est_scalefac,est_rmv_normal)
rm(est_rmv, est_scalefac,est_rmv_normal)
#change from wide to long
df_comp <- df_comp %>% gather(key = "variable", value = "value", -c(cond_nu,rho, fix, run, method)) %>%
tidyr::extract(variable, c("trouble", "variable"),"([[:alnum:]]+).([[:alnum:]]+)" ) %>%
tidyr::spread(key = trouble, value = value)
df_comp$variable  <- factor(df_comp$variable, levels = c("const", "x1", "x2"))
df_comp$run  <- as.factor(df_comp$run )
df_comp$method  <- as.factor(df_comp$method )
df_comp
p_cn <- ggplot(data = df_comp,
aes(x = cond_nu, y = trouble,group = run,col = method))+
geom_point(alpha = 0.9,pch=".")+
facet_wrap(.~variable,scales = "free", ncol = 3) +
labs(y="Diagonal Entry", x ="Condition Number",
title = "Diagonal entry vs Condition Number")+
theme_classic()+
guides(colour = guide_legend(override.aes = list(shape = 19)))
p_cn
p_cn <- ggplot(data = df_comp,
aes(x = cond_nu, y = trouble,group = run,col = method))+
geom_point(alpha = 0.9,pch=".")+
facet_wrap(.~variable,scales = "free", ncol = 3) +
labs(y="Diagonal Entry", x ="Condition Number",
title = "Diagonal entry vs Condition Number")+
theme_classic()+
scale_fill_discrete(name = "Method", labels = c("rmv to uniform", "rmv", "scale factor"))+
guides(colour = guide_legend(override.aes = list(shape = 19)))
p_cn
ggplot(data = df_comp,
aes(x = cond_nu, y = trouble,group = run,col = method))+
geom_point(alpha = 0.9,pch=".")+
facet_wrap(.~variable,scales = "free", ncol = 3) +
labs(y="Diagonal Entry", x ="Condition Number",
title = "Diagonal entry vs Condition Number")+
theme_classic()+
scale_colour_discrete(name = "Method", labels = c("rmv to uniform", "rmv", "scale factor"))+
guides(colour = guide_legend(override.aes = list(shape = 19)))
show_col(hue_pal()(43)
)
library(scales)
)
show_col(hue_pal()(4))
hue_pal()(4)
ggplot(data = df_comp,
aes(x = cond_nu, y = trouble,group = run,col = method))+
geom_point(alpha = 0.9,pch=".")+
facet_wrap(.~variable,scales = "free", ncol = 3) +
labs(y="Diagonal Entry", x ="Condition Number",
title = "Diagonal entry vs Condition Number")+
theme_classic()+
scale_colour_discrete(name = "Method", labels = c("rmv to uniform", "rmv", "scale factor"),
values = c("#F8766D","#7CAE00","#00BFC4"))+
guides(colour = guide_legend(override.aes = list(shape = 19)))
?scale_colour_discrete
ggplot(data = df_comp,
aes(x = cond_nu, y = trouble,group = run,col = method))+
geom_point(alpha = 0.9,pch=".")+
facet_wrap(.~variable,scales = "free", ncol = 3) +
labs(y="Diagonal Entry", x ="Condition Number",
title = "Diagonal entry vs Condition Number")+
theme_classic()+
scale_colour_manual(name = "Method", labels = c("rmv to uniform", "rmv", "scale factor"),
values = c("#F8766D","#7CAE00","#00BFC4"))+
guides(colour = guide_legend(override.aes = list(shape = 19)))
#plotting
p_cn <- ggplot(data = df_comp,
aes(x = cond_nu, y = trouble,group = run,col = method))+
geom_point(alpha = 0.9,pch=".")+
facet_wrap(.~variable,scales = "free", ncol = 3) +
labs(y="Diagonal Entry", x ="Condition Number",
title = "Diagonal entry vs Condition Number")+
theme_classic()+
scale_colour_manual(name = "Method", labels = c("rmv to uniform", "rmv", "scale factor"),
values = c("#F8766D","#7CAE00","#00BFC4"))+
guides(colour = guide_legend(override.aes = list(shape = 19)))
p_rho <- ggplot(data = df_comp,
aes(x = rho, y = trouble,group = run,col = method))+
geom_point(alpha = 0.9,pch=".")+
facet_wrap(.~variable,scales = "free", ncol = 3) +
labs(y="Diagonal Entry", x = expression(rho),
title = "Diagonal entry vs Correlation Coefficient")+
theme_classic()+
scale_colour_manual(name = "Method", labels = c("rmv to uniform", "rmv", "scale factor"),
values = c("#F8766D","#7CAE00","#00BFC4"))+
guides(colour = guide_legend(override.aes = list(shape = 19)))
p_sd <- ggplot(data = df_comp,
aes(x = cond_nu, y = sd,group = run,col = method))+
geom_point(alpha = 0.9,pch=".")+
facet_wrap(.~variable,scales = "free", ncol = 3) +
labs(title="Standard deviation", x = "Condition Number",y = "Standard deviation")+
theme_classic()+
scale_colour_manual(name = "Method", labels = c("rmv to uniform", "rmv", "scale factor"),
values = c("#F8766D","#7CAE00","#00BFC4"))+
guides(colour = guide_legend(override.aes = list(shape = 19)))
p_cc <- ggplot(data = df_comp,
aes(x = cond_nu, y = rho,group = run,col = method))+
geom_point(alpha = 0.9,pch=".")+
facet_wrap(.~variable,scales = "free", ncol = 3) +
labs(y=expression(rho), x ="Condition Number",
title = " Correlation Coefficient vs Condition Number")+
theme_classic()+
scale_colour_manual(name = "Method", labels = c("rmv to uniform", "rmv", "scale factor"),
values = c("#F8766D","#7CAE00","#00BFC4"))+
guides(colour = guide_legend(override.aes = list(shape = 19)))
p_beta <- ggplot(data = df_comp,
aes(x = cond_nu, y = beta,group = run,col = method))+
geom_point(alpha = 0.9,pch=".")+
facet_wrap(.~variable,scales = "free", ncol = 3) +
labs(y="Coefficient", x ="Condition Number",
title = "Coefficient vs Condition Number")+
theme_classic()+
scale_colour_manual(name = "Method", labels = c("rmv to uniform", "rmv", "scale factor"),
values = c("#F8766D","#7CAE00","#00BFC4"))+
guides(colour = guide_legend(override.aes = list(shape = 19)))
p_se <- ggplot(data = df_comp,
aes(x = cond_nu, y = se,group = run,col = method))+
geom_point(alpha = 0.9,pch=".")+
facet_wrap(.~variable,scales = "free", ncol = 3) +
labs(y="Standard error", x ="Condition Number",
title = "Standard error vs Condition Number")+
theme_classic()+
scale_colour_manual(name = "Method", labels = c("rmv to uniform", "rmv", "scale factor"),
values = c("#F8766D","#7CAE00","#00BFC4"))+
guides(colour = guide_legend(override.aes = list(shape = 19)))
p_wald <- ggplot(data = df_comp,
aes(x = cond_nu, y = beta/se,group = run,col = method))+
geom_point(alpha = 0.9,pch=".")+
facet_wrap(.~variable,scales = "free", ncol = 3) +
labs(y="Wald-Statistics", x ="Condition Number",
title = "Wald-Statistics vs Condition Number")+
theme_classic()+
scale_colour_manual(name = "Method", labels = c("rmv to uniform", "rmv", "scale factor"),
values = c("#F8766D","#7CAE00","#00BFC4"))+
guides(colour = guide_legend(override.aes = list(shape = 19)))
#plotting all together
p_tot <- ggarrange(p_rho,p_cn,p_cc,p_sd,p_beta, p_se, p_wald,
ncol=1, nrow=7,
common.legend = TRUE, legend="bottom",align = "v")
p_tot
library(ggplot2); library(gridExtra);library(ggpubr)
#plotting
p_cn <- ggplot(data = df_comp,
aes(x = cond_nu, y = trouble,group = run,col = method))+
geom_point(alpha = 0.9,pch=".")+
facet_wrap(.~variable,scales = "free", ncol = 3) +
labs(y="Diagonal Entry", x ="Condition Number",
title = "Diagonal entry vs Condition Number")+
theme_classic()+
scale_colour_manual(name = "Method", labels = c("rmv to uniform", "rmv", "scale factor"),
values = c("#F8766D","#7CAE00","#00BFC4"))+
guides(colour = guide_legend(override.aes = list(shape = 19)))
p_rho <- ggplot(data = df_comp,
aes(x = rho, y = trouble,group = run,col = method))+
geom_point(alpha = 0.9,pch=".")+
facet_wrap(.~variable,scales = "free", ncol = 3) +
labs(y="Diagonal Entry", x = expression(rho),
title = "Diagonal entry vs Correlation Coefficient")+
theme_classic()+
scale_colour_manual(name = "Method", labels = c("rmv to uniform", "rmv", "scale factor"),
values = c("#F8766D","#7CAE00","#00BFC4"))+
guides(colour = guide_legend(override.aes = list(shape = 19)))
p_sd <- ggplot(data = df_comp,
aes(x = cond_nu, y = sd,group = run,col = method))+
geom_point(alpha = 0.9,pch=".")+
facet_wrap(.~variable,scales = "free", ncol = 3) +
labs(title="Standard deviation", x = "Condition Number",y = "Standard deviation")+
theme_classic()+
scale_colour_manual(name = "Method", labels = c("rmv to uniform", "rmv", "scale factor"),
values = c("#F8766D","#7CAE00","#00BFC4"))+
guides(colour = guide_legend(override.aes = list(shape = 19)))
p_cc <- ggplot(data = df_comp,
aes(x = cond_nu, y = rho,group = run,col = method))+
geom_point(alpha = 0.9,pch=".")+
facet_wrap(.~variable,scales = "free", ncol = 3) +
labs(y=expression(rho), x ="Condition Number",
title = " Correlation Coefficient vs Condition Number")+
theme_classic()+
scale_colour_manual(name = "Method", labels = c("rmv to uniform", "rmv", "scale factor"),
values = c("#F8766D","#7CAE00","#00BFC4"))+
guides(colour = guide_legend(override.aes = list(shape = 19)))
p_beta <- ggplot(data = df_comp,
aes(x = cond_nu, y = beta,group = run,col = method))+
geom_point(alpha = 0.9,pch=".")+
facet_wrap(.~variable,scales = "free", ncol = 3) +
labs(y="Coefficient", x ="Condition Number",
title = "Coefficient vs Condition Number")+
theme_classic()+
scale_colour_manual(name = "Method", labels = c("rmv to uniform", "rmv", "scale factor"),
values = c("#F8766D","#7CAE00","#00BFC4"))+
guides(colour = guide_legend(override.aes = list(shape = 19)))
p_se <- ggplot(data = df_comp,
aes(x = cond_nu, y = se,group = run,col = method))+
geom_point(alpha = 0.9,pch=".")+
facet_wrap(.~variable,scales = "free", ncol = 3) +
labs(y="Standard error", x ="Condition Number",
title = "Standard error vs Condition Number")+
theme_classic()+
scale_colour_manual(name = "Method", labels = c("rmv to uniform", "rmv", "scale factor"),
values = c("#F8766D","#7CAE00","#00BFC4"))+
guides(colour = guide_legend(override.aes = list(shape = 19)))
p_wald <- ggplot(data = df_comp,
aes(x = cond_nu, y = beta/se,group = run,col = method))+
geom_point(alpha = 0.9,pch=".")+
facet_wrap(.~variable,scales = "free", ncol = 3) +
labs(y="Wald-Statistics", x ="Condition Number",
title = "Wald-Statistics vs Condition Number")+
theme_classic()+
scale_colour_manual(name = "Method", labels = c("rmv to uniform", "rmv", "scale factor"),
values = c("#F8766D","#7CAE00","#00BFC4"))+
guides(colour = guide_legend(override.aes = list(shape = 19)))
#plotting all together
p_tot <- ggarrange(p_rho,p_cn,p_cc,p_sd,p_beta, p_se, p_wald,
ncol=1, nrow=7,
common.legend = TRUE, legend="bottom",align = "v")
p_tot
?hue_pal
rgb(0,0,0)
library(ggplot2); library(gridExtra);library(ggpubr);library(stringr)
library(Collinearity);library(mlbench);data("BostonHousing2")
# load data
df_to_plot_prop <- readRDS("../data/cross_section_df.rds")
df_to_plot <- df_to_plot_prop$df
df_to_plot$col <- do.call("rbind", str_split(df_to_plot$method, "_"))[,1]
df_to_plot_prop <- data.frame(df_to_plot_prop$prop)
df_to_plot_prop$rho <- as.numeric(df_to_plot_prop$rho)
df_to_plot_prop$cond_nu <- as.numeric(df_to_plot_prop$cond_nu)
df_to_plot_prop$label <- paste0(
"Condition Number = ",round(df_to_plot_prop$cond_nu,2),
" \n ",
"Rho= ",round(df_to_plot_prop$rho,2))
# plotting
labeller <- c("rmv_100"="Higher coll.+Multivar Uniform.", "scale_100"="Higher coll.+Scale",
"rmv_20"="Lower coll.+Multivar Uniform..", "scale_20"="Lower coll.+Scale",
"rmvnormal_20"="Lower coll.+Multivar Normal.",
"rmvnormal_100"="Higher coll.+Multivar Normal.",
"Original"="Original Data"
)
# adding original data frame
df_original <- dplyr::select(BostonHousing2, c("nox", "dis"))
colnames(df_original) <- c("x1", "x2")
df_original$method <- "Original"
df_original$col <- "Original"
df_to_plot <- dplyr::bind_rows(df_to_plot, df_original )
row.names(df_to_plot) <- NULL
df_to_plot$method <- factor(df_to_plot$method,
levels = c("scale_20", "scale_100",
"rmv_20", "rmv_100",
"rmvnormal_20", "rmvnormal_100",
"Original")  )
# properties
df_original$cond_nu <- max(Collinearity::Var_decom_mat.matrix(
as.matrix(
cbind("cons"=1,"x1"=df_original$x1, "x2"=df_original$x2 )
))[,"cond_ind"])
df_original$rho <- cor(df_original$x1, df_original$x2)
df_original$label <- paste0("Condition Number = ", round(df_original$cond_nu,3) ,
" \n Rho = ", round(df_original$rho,3))
df_to_plot_prop <- dplyr::bind_rows(df_to_plot_prop,
dplyr::select(df_original,c("method", "label") ))
df_to_plot_prop$method <- factor(df_to_plot_prop$method,
levels = c("scale_20", "scale_100",
"rmv_20", "rmv_100",
"rmvnormal_20", "rmvnormal_100",
"Original") )
#plotting
ggplot(data = df_to_plot, aes(x=x1, y = x2,col = col))+
geom_point(show.legend = F,alpha = 0.5)+
geom_label(data =df_to_plot_prop, aes(x=-Inf, y = -Inf, label = label),
col = "black",vjust = 0,hjust = 0 ,show.legend = F, label.size = NA)+
facet_wrap(~method, labeller = labeller(method = labeller), ncol = 2,as.table = F) +
geom_hline(yintercept = range_x2,lty = 2)+
geom_vline(xintercept = range_x1,lty = 2)+
geom_point(x = mean_x1,y = mean_x2,col = "black")+
labs(y = bquote(bold(x)[2]), x = bquote(bold(x)[1]),
title = "Data sets generated with different methods")+
scale_colour_manual(name = "Method", labels = c("rmv to uniform", "rmv", "scale factor"),
values = c("#000000","#F8766D","#7CAE00","#00BFC4"))+
theme_classic()
getwd()
# Load parameters defined earlier
if(file.exists("../fromsim/na_sim.rds") ){
print("Found parameters here!")
}else if(file.exists("./../../../simulation/data/na_sim.rds")){
print("Found parameters in the other repository! Will copy them!")
na_sim <- readRDS("./../../../simulation/data/na_sim.rds")
# save them in this repository
na_sim <- readRDS("./../../../simulation/data/na_sim.rds")
saveRDS(na_sim, file = "../fromsim/na_sim.rds")
}else{
print("No parameters found... where is Sherlock?")
}
# Load parameters defined earlier
if(file.exists("../fromsim/na_sim.rds") ){
print("Found parameters here!")
}else if(file.exists("./../../../simulation/data/na_sim.rds")){
print("Found parameters in the other repository! Will copy them!")
na_sim <- readRDS("./../../../simulation/data/na_sim.rds")
# save them in this repository
na_sim <- readRDS("./../../../simulation/data/na_sim.rds")
saveRDS(na_sim, file = "../fromsim/na_sim.rds")
}else{
print("No parameters found... where is Sherlock?")
}
?file.copy
paste0("./../../../simulation/data/",l)
l <- "na_sim.rds"
paste0("./../../../simulation/data/",l)
x <- "na_sim.rds"
if(file.exists(paste0("./../../../simulation/data/",x))){
print("Found parameters in the other repository! Will copy them!")
file.copy(from = paste0("./../../../simulation/data/",x), to = paste0("../fromsim/data/",x))
}else if(file.exists(paste0("../fromsim/data/",x)) ){
print("Found parameters here!")
}
file.copy(from = paste0("./../../../simulation/data/",x), to = paste0("../fromsim/data/",x))
file.copy(from = paste0("./../../../simulation/data/",x), to = paste0("../fromsim/data/",x))
file.copy(from = paste0("./../../../simulation/data/",x), to = paste0("../fromsim/",x))
file.copy(from = paste0("./../../../simulation/data/",x), to = paste0("../fromsim/",x), showWarnings=F)
if(file.exists(paste0("./../../../simulation/data/",x))){
print("Found parameters in the other repository! Will copy them!")
file.copy(from = paste0("./../../../simulation/data/",x), to = paste0("../fromsim/",x))
}else if(file.exists(paste0("../fromsim/",x)) ){
print("Found parameters here!")
}
if(file.exists(paste0("./../../../simulation/data/",x))){
print("Found parameters in the other repository! Will copy them!")
file.copy(from = paste0("./../../../simulation/data/",x), to = paste0("../fromsim/",x))
}else if(file.exists(paste0("../fromsim/",x)) ){
print("Found parameters here!")
}
if(file.exists(paste0("./../../../simulation/data/",x))){
print("Found parameters in the other repository! Will copy them!")
file.copy(from = paste0("./../../../simulation/data/",x), to = paste0("../fromsim/",x))
}else if(file.exists(paste0("../fromsim/",x)) ){
print("Found parameters here!")
}
if(file.exists(paste0("./../../../simulation/data/",x))){
print("Found parameters in the other repository! Will copy them!")
file.copy(from = paste0("./../../../simulation/data/",x), to = paste0("../fromsim/",x),overwrite = TRUE)
}else if(file.exists(paste0("../fromsim/",x)) ){
print("Found parameters here!")
}
if(file.exists(paste0("./../../../simulation/data/",x))){
print("Found parameters in the other repository! Will copy them!")
invisible(
file.copy(from = paste0("./../../../simulation/data/",x), to = paste0("../fromsim/",x),overwrite = TRUE)
)
}else if(file.exists(paste0("../fromsim/",x)) ){
print("Found parameters here!")
}
links <- list(
"data/na_sim.rds"
,"data/runtime_total.txt"
,"results_simulation/figure/simres_wald11-1.png"
,"results_simulation/figure/simres_wald21-1.png"
,"results_simulation/figure/simres_wald31-1.png"
,"results_simulation/figure/simres_wald101-1.png"
,"results_simulation/figure/simres_wald111-1.png"
,"results_simulation/figure/simres_wald121-1.png"
,"results_simulation/figure/simana11-1.png"
,"results_simulation/figure/simana41-1.png"
,"results_simulation/figure/simres_prop11-1.png"
,"results_simulation/figure/simres_prop21-1.png"
,"results_simulation/figure/simres_prop31-1.png"
,"results_simulation/figure/simres_prop101-1.png"
,"results_simulation/figure/simres_prop111-1.png"
,"results_simulation/figure/simres_prop121-1.png"
,"results_simulation/figure/simres_bivar11-1.png"
,"results_simulation/figure/simres_bivar41-1.png"
,"results_simulation/figure/simdiffvswald111-1.png"
,"results_simulation/figure/simdiffvswald112-1.png"
,"results_simulation/figure/simdiffvswald411-1.png"
,"results_simulation/figure/simdiffvswald412-1.png"
,"results_simulation/figure/simres_nrel1-1.png"
,"results_simulation/figure/simres_nrel2-1.png"
,"results_simulation/figure/simres_nrel3-1.png"
,"results_simulation/figure/simres_nrel10-1.png"
,"results_simulation/figure/simres_nrel11-1.png"
,"results_simulation/figure/simres_nrel12-1.png"
)
lapply(links,function(x){
if(file.exists(paste0("./../../../simulation/",x))){
#print("Found parameters in the other repository! Will copy them!")
invisible(
file.copy(from = paste0("./../../../simulation/",x), to = paste0("../fromsim/",x),overwrite = TRUE)
)
}else if(file.exists(paste0("../fromsim/",x)) ){
#print("Found parameters here!")
}
})
warnings()
links <- lapply(links, function(x){strsplit(x,split="/")}
)
links
x <- "results_simulation/figure/simres_nrel12-1.png"
l <- strsplit(x,split="/")
l
l[length(l)]
l[[length(l)]]
unlist(l)[[length(l)]]
l
unlist(l)
unlist(l)[length(unlist(l))]
lapply(links,function(x){
if(file.exists(paste0("./../../../simulation/",x))){
#print("Found parameters in the other repository! Will copy them!")
to <- unlist(strsplit(x,split="/"))
to <- to[length(to)]
invisible(
file.copy(from = paste0("./../../../simulation/",x), to = paste0("../fromsim/",to),overwrite = TRUE)
)
}else if(file.exists(paste0("../fromsim/",x)) ){
#print("Found parameters here!")
}
})
links <- list(
"data/na_sim.rds"
,"data/runtime_total.txt"
,"results_simulation/figure/simres_wald11-1.png"
,"results_simulation/figure/simres_wald21-1.png"
,"results_simulation/figure/simres_wald31-1.png"
,"results_simulation/figure/simres_wald101-1.png"
,"results_simulation/figure/simres_wald111-1.png"
,"results_simulation/figure/simres_wald121-1.png"
,"results_simulation/figure/simana11-1.png"
,"results_simulation/figure/simana41-1.png"
,"results_simulation/figure/simres_prop11-1.png"
,"results_simulation/figure/simres_prop21-1.png"
,"results_simulation/figure/simres_prop31-1.png"
,"results_simulation/figure/simres_prop101-1.png"
,"results_simulation/figure/simres_prop111-1.png"
,"results_simulation/figure/simres_prop121-1.png"
,"results_simulation/figure/simres_bivar11-1.png"
,"results_simulation/figure/simres_bivar41-1.png"
,"results_simulation/figure/simdiffvswald111-1.png"
,"results_simulation/figure/simdiffvswald112-1.png"
,"results_simulation/figure/simdiffvswald411-1.png"
,"results_simulation/figure/simdiffvswald412-1.png"
,"results_simulation/figure/simres_nrel1-1.png"
,"results_simulation/figure/simres_nrel2-1.png"
,"results_simulation/figure/simres_nrel3-1.png"
,"results_simulation/figure/simres_nrel10-1.png"
,"results_simulation/figure/simres_nrel11-1.png"
,"results_simulation/figure/simres_nrel12-1.png"
)
lapply(links,function(x){
if(file.exists(paste0("./../../../simulation/",x))){
#print("Found parameters in the other repository! Will copy them!")
to <- unlist(strsplit(x,split="/"))
to <- to[length(to)]
invisible(
file.copy(from = paste0("./../../../simulation/",x), to = paste0("../fromsim/",to),overwrite = TRUE)
)
}else if(file.exists(paste0("../fromsim/",x)) ){
#print("Found parameters here!")
}
})
?invisible
# load NA list
na_sim <- readRDS("../fromsim/na_sim.rds")
na_sim
